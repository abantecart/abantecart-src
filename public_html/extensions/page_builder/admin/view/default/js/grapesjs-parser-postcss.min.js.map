{"version":3,"file":"index.js","mappings":"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","sources":["webpack://grapesjs-parser-postcss/webpack/universalModuleDefinition","webpack://grapesjs-parser-postcss/./node_modules/picocolors/picocolors.browser.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/at-rule.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/comment.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/container.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/css-syntax-error.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/declaration.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/document.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/fromJSON.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/input.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/lazy-result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/list.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/map-generator.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/no-work-result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/node.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/parse.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/parser.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/postcss.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/previous-map.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/processor.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/result.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/root.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/rule.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/stringifier.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/stringify.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/symbols.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/tokenize.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/warn-once.js","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/warning.js","webpack://grapesjs-parser-postcss/./node_modules/nanoid/non-secure/index.cjs","webpack://grapesjs-parser-postcss/webpack/bootstrap","webpack://grapesjs-parser-postcss/webpack/runtime/define property getters","webpack://grapesjs-parser-postcss/webpack/runtime/hasOwnProperty shorthand","webpack://grapesjs-parser-postcss/webpack/runtime/make namespace object","webpack://grapesjs-parser-postcss/./node_modules/postcss/lib/postcss.mjs","webpack://grapesjs-parser-postcss/./src/parser.ts","webpack://grapesjs-parser-postcss/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-parser-postcss\"] = factory();\n\telse\n\t\troot[\"grapesjs-parser-postcss\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { isAbsolute, resolve } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n\n  get proxyOf() {\n    return this\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.31'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n\n  get content() {\n    return this.css\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nmodule.exports = { nanoid, customAlphabet }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n","import type { Editor } from 'grapesjs';\nimport postcss, { Rule, AtRule, Declaration } from 'postcss';\n\nexport type ParsedRule = {\n  selectors: string;\n  style: Record<string, string>;\n  atRule?: string;\n  params?: string;\n}\n\n/**\n * Log stuff\n * @param  {Editor} editor\n * @param  {*} msg\n */\nexport const log = (editor?: Editor, msg?: any) =>\n  editor && editor.log(msg, { ns: 'parser-poscss' });\n\n/**\n * Create rule from node\n * @param  {Object} node\n * @return {Object}\n */\nexport const createRule = (node: Rule): ParsedRule => {\n  const declarations = (node.nodes as Declaration[]) || [];\n  const style: Record<string, string> = {};\n\n  declarations.forEach(({ prop, value, important }) => {\n    style[prop] = value + (important ? ' !important' : '');\n  });\n\n  return {\n    selectors: node.selector || '',\n    style,\n  }\n};\n\n/**\n * Create at rule from node\n * @param  {Object} node\n * @param  {Array<Object>} result\n * @return {Object}\n */\nexport const createAtRule = (node: AtRule, result: ParsedRule[]) => {\n  const { name, params } = node;\n  const isNested = ['media', 'keyframes'].indexOf(name) >= 0;\n\n  if (isNested) {\n    node.nodes.forEach(node => {\n      result.push({\n        ...createRule(node as Rule),\n        atRule: name,\n        params,\n      })\n    });\n  } else {\n    result.push({\n      // @ts-ignore\n      ...createRule(node as Rule),\n      atRule: name,\n    })\n  }\n};\n\nexport default (css: string, editor?: Editor) => {\n  const result: ParsedRule[] = [];\n  log(editor, ['Input CSS', css]);\n\n  const ast = postcss().process(css).sync().root;\n  log(editor, ['PostCSS AST', ast]);\n\n  ast.nodes.forEach(node => {\n    const { type } = node;\n\n    switch (type) {\n      case 'rule':\n        result.push(createRule(node));\n        break;\n      case 'atrule':\n        createAtRule(node, result);\n        break;\n    }\n  });\n\n  log(editor, ['Output', result]);\n\n  return result;\n}\n","import type { Plugin } from 'grapesjs';\nimport parser from './parser';\n\nconst plugin: Plugin = (editor) => {\n  editor.setCustomParserCss(parser);\n};\n\nexport default plugin;\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","x","String","create","isColorSupported","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","createColors","Container","AtRule","constructor","defaults","super","type","append","children","proxyOf","nodes","prepend","default","registerAtRule","Node","Comment","parse","Rule","Root","isClean","my","Declaration","cleanSource","map","i","source","markDirtyUp","node","child","normalize","last","push","markDirty","cleanRaws","keepBetween","each","callback","index","result","iterator","getIterator","indexes","length","every","condition","lastEach","getProxyProcessor","get","prop","startsWith","args","toProxy","cb","other","set","value","indexOf","insertAfter","exist","add","existIndex","reverse","splice","id","insertBefore","sample","Array","isArray","slice","parent","removeChild","Error","selector","name","text","rebuild","raws","before","replace","first","unshift","removeAll","undefined","replaceValues","pattern","opts","walkDecls","decl","props","includes","fast","some","walk","e","addToError","walkAtRules","RegExp","test","walkComments","walkRules","registerParse","dependant","registerRule","registerRoot","Object","setPrototypeOf","prototype","forEach","pico","terminalHighlight","CssSyntaxError","message","line","column","file","plugin","reason","endLine","endColumn","setMessage","captureStackTrace","showSourceCode","color","css","mark","aside","lines","split","start","Math","max","end","min","maxWidth","str","number","gutter","spacing","join","toString","code","variable","LazyResult","Processor","Document","toResult","stringify","registerLazyResult","registerProcessor","PreviousMap","Input","fromJSON","json","inputs","n","ownInputs","input","inputHydrated","__proto__","inputId","SourceMapConsumer","SourceMapGenerator","fileURLToPath","pathToFileURL","isAbsolute","resolve","nanoid","fromOffsetCache","Symbol","sourceMapAvailable","Boolean","pathAvailable","hasBOM","from","consumer","mapResolve","error","offset","pos","fromOffset","col","origin","url","lastLine","lineToIndex","prevIndex","l","mid","sourceRoot","to","fromUrl","originalPositionFor","URL","mapFile","protocol","sourceContentFor","toJSON","consumerCache","registerInput","MapGenerator","Result","TYPE_TO_CLASS_NAME","atrule","comment","document","rule","PLUGIN_PROPS","AtRuleExit","CommentExit","DeclarationExit","DocumentExit","Once","OnceExit","postcssPlugin","prepare","RootExit","RuleExit","NOT_VISITORS","CHILDREN","isPromise","obj","then","getEvents","key","toLowerCase","toStack","events","eventIndex","visitorIndex","visitors","cleanMarks","postcss","processor","stringified","processed","inline","prev","parser","syntax","helpers","plugins","async","Promise","reject","processing","runAsync","onRejected","catch","onFinally","getAsyncError","handleError","lastPlugin","postcssVersion","err","console","prepareVisitors","listeners","event","version","filter","hasListener","keys","promise","runOnRoot","stack","visitTick","visitor","roots","subRoot","all","sync","stringifier","data","generate","walkSync","visitSync","onFulfilled","visit","pop","warnings","content","messages","toStringTag","registerPostcss","list","comma","string","space","separators","array","current","func","inQuote","prevQuote","escape","letter","trim","dirname","relative","sep","cssString","mapOpts","usesFileUrls","absolute","memoizedFileURLs","Map","memoizedPaths","memoizedURLs","addAnnotation","isInline","toBase64","annotation","outputFile","eol","applyPrevMaps","previous","toUrl","path","sourcesContent","applySourceMap","clearAnnotation","isMap","generateMap","generateString","fromSourceMap","addMapping","generated","original","isSourcesContent","setSourcesContent","isAnnotation","noSource","mapping","sourcePath","match","lastIndexOf","p","semicolon","withContent","charCodeAt","cached","previousMaps","already","toFileUrl","setSourceContent","Buffer","btoa","unescape","encodeURIComponent","fileURL","encodeURI","NoWorkResult","_processor","_css","_opts","_map","self","defineProperty","generatedCSS","generatedMap","_root","Stringifier","cloneNode","cloned","hasOwnProperty","call","j","clone","postcssNode","s","after","assign","overrides","between","cloneAfter","cloneBefore","rangeBy","next","positionBy","stringRepresentation","positionInside","word","endIndex","raw","defaultType","remove","replaceWith","bookmark","foundSelf","_","fixed","emitInputs","inputsNextIndex","proxyCache","Proxy","warn","Parser","tokenizer","SAFE_COMMENT_NEIGHBOR","empty","spaces","customProperty","createTokenizer","token","shift","unnamedAtrule","init","open","params","brackets","endOfFile","nextToken","getPosition","spacesAndCommentsFromEnd","afterName","spacesAndCommentsFromStart","checkMissedSemicolon","tokens","colon","founded","element","entries","doubleColon","left","right","findLastWithPosition","unknownWord","firstSpaces","precheckMissedSemicolon","important","stringFrom","spacesFromEnd","cache","concat","emptyRule","unexpectedClose","endFile","unclosedBlock","position","freeSemicolon","ownSemicolon","bracket","back","unclosedBracket","clean","reduce","lastTokenType","Warning","initializer","warningPrinted","creator","process","env","LANG","transformer","processOpts","pluginOpts","atRule","existsSync","readFileSync","loadAnnotation","startWith","loadMap","decodeInline","decodeURIComponent","substr","lastMatch","atob","encoding","getAnnotationURL","sourceMapString","mappings","_mappings","sections","comments","substring","loadFile","JSON","prevPath","normalized","use","warning","ignore","selectors","values","DEFAULT_RAW","beforeClose","beforeComment","beforeDecl","beforeOpen","beforeRule","commentLeft","commentRight","emptyBody","indent","builder","rawValue","block","beforeAfter","detect","buf","depth","step","body","own","rawCache","method","toUpperCase","rawBeforeClose","rawBeforeComment","rawBeforeDecl","rawBeforeOpen","rawBeforeRule","rawColon","rawEmptyBody","rawIndent","parts","rawSemicolon","SINGLE_QUOTE","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","options","quote","escaped","escapePos","currentToken","valueOf","ignoreErrors","buffer","returned","unclosed","what","ignoreUnclosed","controlChar","fromCharCode","lastIndex","charAt","printed","range","opt","urlAlphabet","size","random","customAlphabet","alphabet","defaultSize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","o","enumerable","r","log","editor","msg","ns","createRule","declarations","style","ast","createAtRule","setCustomParserCss"],"sourceRoot":""}