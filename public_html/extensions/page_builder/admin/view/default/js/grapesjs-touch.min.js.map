{"version":3,"sources":["webpack://grapesjs-touch/webpack/universalModuleDefinition","webpack://grapesjs-touch/webpack/bootstrap","webpack://grapesjs-touch/./src/index.js","webpack://grapesjs-touch/./src/DragDropTouch.js","webpack://grapesjs-touch/./src/touchpolyfill.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","editor","_touchpolyfill2","default","_DragDropTouch2","DragDropTouch","DragDropTouch_1","DataTransfer","this","_dropEffect","_effectAllowed","_data","set","configurable","keys","clearData","type","getData","setData","setDragImage","img","offsetX","offsetY","ddt","_instance","_imgCustom","_imgOffset","x","y","_lastClick","supportsPassive","document","addEventListener","passive","ts","_touchstart","tm","_touchmove","te","_touchend","opt","capture","getInstance","e","_this","_shouldHandle","Date","now","_DBLCLICK","_dispatchEvent","target","preventDefault","_reset","src","_closestDraggable","_dragSource","_ptDown","_getPoint","_lastTouch","setTimeout","_img","_CTXMENU","_getTarget","_getDelta","_THRESHOLD","_createImage","_lastTarget","_moveImage","_destroyImage","indexOf","defaultPrevented","touches","length","_dataTransfer","page","pageX","clientX","pageY","clientY","Math","abs","pt","el","elementFromPoint","nodeName","iframeDocument","contentWindow","iframeAbsoluteOffset","offsetLeft","offsetTop","offsetParent","getComputedStyle","pointerEvents","parentElement","cloneNode","_copyStyle","style","top","left","rc","getBoundingClientRect","opacity","_OPACITY","toString","body","appendChild","removeChild","requestAnimationFrame","position","zIndex","round","_copyProps","dst","props","_rmvAtts","forEach","att","removeAttribute","HTMLCanvasElement","cSrc","cDst","width","height","getContext","drawImage","cs","children","evt","createEvent","initEvent","button","which","buttons","_kbdProps","_ptProps","dataTransfer","dispatchEvent","hasAttribute","draggable","split","touchesWrapper","changedTouchesWrapper","targetTouchesWrapper","lastHwTimestamp","logToConsole","userAgent","navigator","supportedEventsNames","previousTargets","TouchListWrapper","touchList","Touch","identifier","screenX","screenY","getTouch","addUpdateTouch","touch","push","removeTouch","splice","clearTouches","pop","containsTouchAt","touchesAreAtSameSpot","touch0","touch1","CustomEvent","event","params","bubbles","cancelable","detail","undefined","initCustomEvent","generateTouchClonedEvent","sourceEvent","newName","canBubble","relatedTarget","evObj","oldTouch","oldTarget","updateTargetTouches","thisTouchTarget","touchesTouchList","isSameNode","pointerId","eventType","touchEvent","log","Error","hwTimestamp","changedTouchList","changedTouch","matchingTouch","changedTouches","targetTouches","touchHandler","touchChangedHandler","generateTouchEventProxy","touchPoint","eventObject","setTouchAware","item","eventName","enable","eventGenerator","targetEvent","__handJobjsGlobalRegisteredEvents","nameGenerator","toLowerCase","func","__handJobjsRegisteredEvents","removeEventListener","registerOrUnregisterEvent","interceptAddEventListener","current","customAddEventListener","handleOtherEvent","preventManipulation","interceptRemoveEventListener","customRemoveEventListener","ontouchdown","ontouchstart","removeTouchAware","checkEventRegistration","node","generateTouchEventProxyIfRegistered","parentNode","findEventRegisteredNode","getDomUpperHierarchy","nodes","unshift","getFirstCommonNode","node1","node2","parents1","parents2","lastmatch","shift","console","Event","_typeof","match","css","head","getElementsByTagName","createElement","styleSheet","cssText","createTextNode","HTMLElement","Element","HTMLBodyElement","HTMLDivElement","HTMLImageElement","HTMLUListElement","HTMLAnchorElement","HTMLLIElement","HTMLTableElement","HTMLSpanElement","SVGElement","ignorePointerEvent","pointerType","pressure","currentTarget","generateProxy","commonParent","nodelist","dispatchPointerEnter","targetNode","dispatchPointerLeave","handJobjs_forcePreventDefault","checkPreventDefault"],"mappings":"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","file":"dist/grapesjs-touch.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-touch\"] = factory();\n\telse\n\t\troot[\"grapesjs-touch\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import DragDropTouch from './DragDropTouch';\nimport touchpolyfill from './touchpolyfill';\n\nexport default editor => {\n  touchpolyfill();\n  DragDropTouch();\n};\n","// https://github.com/Bernardo-Castilho/dragdroptouch/blob/master/DragDropTouch.js\n\nexport default () => {\n  var DragDropTouch;\n  (function(DragDropTouch_1) {\n    'use strict';\n    /**\n     * Object used to hold the data that is being dragged during drag and drop operations.\n     *\n     * It may hold one or more data items of different types. For more information about\n     * drag and drop operations and data transfer objects, see\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer\">HTML Drag and Drop API</a>.\n     *\n     * This object is created automatically by the @see:DragDropTouch singleton and is\n     * accessible through the @see:dataTransfer property of all drag events.\n     */\n    var DataTransfer = (function() {\n      function DataTransfer() {\n        this._dropEffect = 'move';\n        this._effectAllowed = 'all';\n        this._data = {};\n      }\n      Object.defineProperty(DataTransfer.prototype, 'dropEffect', {\n        /**\n         * Gets or sets the type of drag-and-drop operation currently selected.\n         * The value must be 'none',  'copy',  'link', or 'move'.\n         */\n        get: function() {\n          return this._dropEffect;\n        },\n        set: function(value) {\n          this._dropEffect = value;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(DataTransfer.prototype, 'effectAllowed', {\n        /**\n         * Gets or sets the types of operations that are possible.\n         * Must be one of 'none', 'copy', 'copyLink', 'copyMove', 'link',\n         * 'linkMove', 'move', 'all' or 'uninitialized'.\n         */\n        get: function() {\n          return this._effectAllowed;\n        },\n        set: function(value) {\n          this._effectAllowed = value;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      Object.defineProperty(DataTransfer.prototype, 'types', {\n        /**\n         * Gets an array of strings giving the formats that were set in the @see:dragstart event.\n         */\n        get: function() {\n          return Object.keys(this._data);\n        },\n        enumerable: true,\n        configurable: true\n      });\n      /**\n       * Removes the data associated with a given type.\n       *\n       * The type argument is optional. If the type is empty or not specified, the data\n       * associated with all types is removed. If data for the specified type does not exist,\n       * or the data transfer contains no data, this method will have no effect.\n       *\n       * @param type Type of data to remove.\n       */\n      DataTransfer.prototype.clearData = function(type) {\n        if (type != null) {\n          delete this._data[type];\n        } else {\n          this._data = null;\n        }\n      };\n      /**\n       * Retrieves the data for a given type, or an empty string if data for that type does\n       * not exist or the data transfer contains no data.\n       *\n       * @param type Type of data to retrieve.\n       */\n      DataTransfer.prototype.getData = function(type) {\n        return this._data[type] || '';\n      };\n      /**\n       * Set the data for a given type.\n       *\n       * For a list of recommended drag types, please see\n       * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Recommended_Drag_Types.\n       *\n       * @param type Type of data to add.\n       * @param value Data to add.\n       */\n      DataTransfer.prototype.setData = function(type, value) {\n        this._data[type] = value;\n      };\n      /**\n       * Set the image to be used for dragging if a custom one is desired.\n       *\n       * @param img An image element to use as the drag feedback image.\n       * @param offsetX The horizontal offset within the image.\n       * @param offsetY The vertical offset within the image.\n       */\n      DataTransfer.prototype.setDragImage = function(img, offsetX, offsetY) {\n        var ddt = DragDropTouch._instance;\n        ddt._imgCustom = img;\n        ddt._imgOffset = { x: offsetX, y: offsetY };\n      };\n      return DataTransfer;\n    })();\n    DragDropTouch_1.DataTransfer = DataTransfer;\n    /**\n     * Defines a class that adds support for touch-based HTML5 drag/drop operations.\n     *\n     * The @see:DragDropTouch class listens to touch events and raises the\n     * appropriate HTML5 drag/drop events as if the events had been caused\n     * by mouse actions.\n     *\n     * The purpose of this class is to enable using existing, standard HTML5\n     * drag/drop code on mobile devices running IOS or Android.\n     *\n     * To use, include the DragDropTouch.js file on the page. The class will\n     * automatically start monitoring touch events and will raise the HTML5\n     * drag drop events (dragstart, dragenter, dragleave, drop, dragend) which\n     * should be handled by the application.\n     *\n     * For details and examples on HTML drag and drop, see\n     * https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_operations.\n     */\n    var DragDropTouch = (function() {\n      /**\n       * Initializes the single instance of the @see:DragDropTouch class.\n       */\n      function DragDropTouch() {\n        this._lastClick = 0;\n        // enforce singleton pattern\n        if (DragDropTouch._instance) {\n          throw 'DragDropTouch instance already created.';\n        }\n        // detect passive event support\n        // https://github.com/Modernizr/Modernizr/issues/1894\n        var supportsPassive = false;\n        document.addEventListener('test', function() {}, {\n          get passive() {\n            supportsPassive = true;\n            return true;\n          }\n        });\n        // listen to touch events\n        if ('ontouchstart' in document) {\n          var d = document,\n            ts = this._touchstart.bind(this),\n            tm = this._touchmove.bind(this),\n            te = this._touchend.bind(this),\n            opt = supportsPassive ? { passive: false, capture: false } : false;\n          d.addEventListener('touchstart', ts, opt);\n          d.addEventListener('touchmove', tm, opt);\n          d.addEventListener('touchend', te);\n          d.addEventListener('touchcancel', te);\n        }\n      }\n      /**\n       * Gets a reference to the @see:DragDropTouch singleton.\n       */\n      DragDropTouch.getInstance = function() {\n        return DragDropTouch._instance;\n      };\n      // ** event handlers\n      DragDropTouch.prototype._touchstart = function(e) {\n        var _this = this;\n        if (this._shouldHandle(e)) {\n          // raise double-click and prevent zooming\n          if (Date.now() - this._lastClick < DragDropTouch._DBLCLICK) {\n            if (this._dispatchEvent(e, 'dblclick', e.target)) {\n              e.preventDefault();\n              this._reset();\n              return;\n            }\n          }\n          // clear all variables\n          this._reset();\n          // get nearest draggable element\n          var src = this._closestDraggable(e.target);\n          if (src) {\n            // give caller a chance to handle the hover/move events\n            if (\n              !this._dispatchEvent(e, 'mousemove', e.target) &&\n              !this._dispatchEvent(e, 'mousedown', e.target)\n            ) {\n              // get ready to start dragging\n              this._dragSource = src;\n              this._ptDown = this._getPoint(e);\n              this._lastTouch = e;\n              e.preventDefault();\n              // show context menu if the user hasn't started dragging after a while\n              setTimeout(function() {\n                if (_this._dragSource == src && _this._img == null) {\n                  if (_this._dispatchEvent(e, 'contextmenu', src)) {\n                    _this._reset();\n                  }\n                }\n              }, DragDropTouch._CTXMENU);\n            }\n          }\n        }\n      };\n      DragDropTouch.prototype._touchmove = function(e) {\n        if (this._shouldHandle(e)) {\n          var target = this._getTarget(e);\n          // start dragging\n          if (this._dragSource && !this._img) {\n            var delta = this._getDelta(e);\n            if (delta > DragDropTouch._THRESHOLD) {\n              this._dispatchEvent(e, 'dragstart', this._dragSource);\n              this._createImage(e);\n              this._dispatchEvent(e, 'dragenter', target);\n            }\n          }\n          // continue dragging\n          if (this._img) {\n            this._lastTouch = e;\n            e.preventDefault(); // prevent scrolling\n            if (target != this._lastTarget) {\n              this._dispatchEvent(this._lastTouch, 'dragleave', this._lastTarget);\n              this._dispatchEvent(e, 'dragenter', target);\n              this._lastTarget = target;\n            }\n            this._moveImage(e);\n            this._dispatchEvent(e, 'dragover', target);\n          }\n          // see if target wants to handle move\n          if (this._dispatchEvent(e, 'mousemove', target)) {\n            this._lastTouch = e;\n            e.preventDefault();\n            return;\n          }\n        }\n      };\n      DragDropTouch.prototype._touchend = function(e) {\n        if (this._shouldHandle(e)) {\n          // finish dragging\n          this._destroyImage();\n          if (this._dragSource) {\n            if (e.type.indexOf('cancel') < 0) {\n              this._dispatchEvent(this._lastTouch, 'drop', this._lastTarget);\n            }\n            this._dispatchEvent(this._lastTouch, 'dragend', this._dragSource);\n            this._reset();\n            // prevent mouse up on drag\n            e.preventDefault();\n            return;\n          }\n          // see if target wants to handle up\n          if (this._dispatchEvent(this._lastTouch, 'mouseup', e.target)) {\n            e.preventDefault();\n            return;\n          }\n          // user clicked the element but didn't drag, so clear the source and simulate a click\n          if (!this._img) {\n            this._dragSource = null;\n            this._dispatchEvent(this._lastTouch, 'click', e.target);\n            this._lastClick = Date.now();\n          }\n        }\n      };\n      // ** utilities\n      // ignore events that have been handled or that involve more than one touch\n      DragDropTouch.prototype._shouldHandle = function(e) {\n        return e && !e.defaultPrevented && e.touches && e.touches.length < 2;\n      };\n      // clear all members\n      DragDropTouch.prototype._reset = function() {\n        this._destroyImage();\n        this._dragSource = null;\n        this._lastTouch = null;\n        this._lastTarget = null;\n        this._ptDown = null;\n        this._dataTransfer = new DataTransfer();\n      };\n      // get point for a touch event\n      DragDropTouch.prototype._getPoint = function(e, page) {\n        if (e && e.touches) {\n          e = e.touches[0];\n        }\n        return { x: page ? e.pageX : e.clientX, y: page ? e.pageY : e.clientY };\n      };\n      // get distance between the current touch event and the first one\n      DragDropTouch.prototype._getDelta = function(e) {\n        var p = this._getPoint(e);\n        return Math.abs(p.x - this._ptDown.x) + Math.abs(p.y - this._ptDown.y);\n      };\n      // get the element at a given touch event\n      DragDropTouch.prototype._getTarget = function(e) {\n        var pt = this._getPoint(e),\n          el = document.elementFromPoint(pt.x, pt.y);\n        // if target element is an iframe, try propagating event to child element\n        if (el && el.nodeName === 'IFRAME') {\n          try {\n            var iframeDocument = el.contentWindow.document;\n            // get iframe absolute offset\n            var iframeAbsoluteOffset = { x: 0, y: 0 };\n            do {\n              iframeAbsoluteOffset.x += el.offsetLeft || 0;\n              iframeAbsoluteOffset.y += el.offsetTop || 0;\n              el = el.offsetParent;\n            } while (el);\n            // remove iframe absolute offset from touch position\n            var x = pt.x - iframeAbsoluteOffset.x,\n              y = pt.y - iframeAbsoluteOffset.y;\n            // get element on that position from iframe document\n            el = iframeDocument.elementFromPoint(x, y);\n          } catch (e) {\n            // iframe origin don't allow access\n          }\n        }\n        while (el && getComputedStyle(el).pointerEvents == 'none') {\n          el = el.parentElement;\n        }\n        return el;\n      };\n      // create drag image from source element\n      DragDropTouch.prototype._createImage = function(e) {\n        // just in case...\n        if (this._img) {\n          this._destroyImage();\n        }\n        // create drag image from custom element or drag source\n        var src = this._imgCustom || this._dragSource;\n        this._img = src.cloneNode(true);\n        this._copyStyle(src, this._img);\n        this._img.style.top = this._img.style.left = '-9999px';\n        // if creating from drag source, apply offset and opacity\n        if (!this._imgCustom) {\n          var rc = src.getBoundingClientRect(),\n            pt = this._getPoint(e);\n          this._imgOffset = { x: pt.x - rc.left, y: pt.y - rc.top };\n          this._img.style.opacity = DragDropTouch._OPACITY.toString();\n        }\n        // add image to document\n        this._moveImage(e);\n        document.body.appendChild(this._img);\n      };\n      // dispose of drag image element\n      DragDropTouch.prototype._destroyImage = function() {\n        if (this._img && this._img.parentElement) {\n          this._img.parentElement.removeChild(this._img);\n        }\n        this._img = null;\n        this._imgCustom = null;\n      };\n      // move the drag image element\n      DragDropTouch.prototype._moveImage = function(e) {\n        var _this = this;\n        requestAnimationFrame(function() {\n          if (_this._img) {\n            var pt = _this._getPoint(e, true),\n              s = _this._img.style;\n            s.position = 'absolute';\n            s.pointerEvents = 'none';\n            s.zIndex = '999999';\n            s.left = Math.round(pt.x - _this._imgOffset.x) + 'px';\n            s.top = Math.round(pt.y - _this._imgOffset.y) + 'px';\n          }\n        });\n      };\n      // copy properties from an object to another\n      DragDropTouch.prototype._copyProps = function(dst, src, props) {\n        for (var i = 0; i < props.length; i++) {\n          var p = props[i];\n          dst[p] = src[p];\n        }\n      };\n      DragDropTouch.prototype._copyStyle = function(src, dst) {\n        // remove potentially troublesome attributes\n        DragDropTouch._rmvAtts.forEach(function(att) {\n          dst.removeAttribute(att);\n        });\n        // copy canvas content\n        if (src instanceof HTMLCanvasElement) {\n          var cSrc = src,\n            cDst = dst;\n          cDst.width = cSrc.width;\n          cDst.height = cSrc.height;\n          cDst.getContext('2d').drawImage(cSrc, 0, 0);\n        }\n        // copy style (without transitions)\n        var cs = getComputedStyle(src);\n        for (var i = 0; i < cs.length; i++) {\n          var key = cs[i];\n          if (key.indexOf('transition') < 0) {\n            dst.style[key] = cs[key];\n          }\n        }\n        dst.style.pointerEvents = 'none';\n        // and repeat for all children\n        for (var i = 0; i < src.children.length; i++) {\n          this._copyStyle(src.children[i], dst.children[i]);\n        }\n      };\n      DragDropTouch.prototype._dispatchEvent = function(e, type, target) {\n        if (e && target) {\n          var evt = document.createEvent('Event'),\n            t = e.touches ? e.touches[0] : e;\n          evt.initEvent(type, true, true);\n          evt.button = 0;\n          evt.which = evt.buttons = 1;\n          this._copyProps(evt, e, DragDropTouch._kbdProps);\n          this._copyProps(evt, t, DragDropTouch._ptProps);\n          evt.dataTransfer = this._dataTransfer;\n          target.dispatchEvent(evt);\n          return evt.defaultPrevented;\n        }\n        return false;\n      };\n      // gets an element's closest draggable ancestor\n      DragDropTouch.prototype._closestDraggable = function(e) {\n        for (; e; e = e.parentElement) {\n          if (e.hasAttribute('draggable') && e.draggable) {\n            return e;\n          }\n        }\n        return null;\n      };\n      return DragDropTouch;\n    })();\n    /*private*/ DragDropTouch._instance = new DragDropTouch(); // singleton\n    // constants\n    DragDropTouch._THRESHOLD = 5; // pixels to move before drag starts\n    DragDropTouch._OPACITY = 0.5; // drag image opacity\n    DragDropTouch._DBLCLICK = 500; // max ms between clicks in a double click\n    DragDropTouch._CTXMENU = 900; // ms to hold before raising 'contextmenu' event\n    // copy styles/attributes from drag source to drag image element\n    DragDropTouch._rmvAtts = 'id,class,style,draggable'.split(',');\n    // synthesize and dispatch an event\n    // returns true if the event has been handled (e.preventDefault == true)\n    DragDropTouch._kbdProps = 'altKey,ctrlKey,metaKey,shiftKey'.split(',');\n    DragDropTouch._ptProps = 'pageX,pageY,clientX,clientY,screenX,screenY'.split(\n      ','\n    );\n    DragDropTouch_1.DragDropTouch = DragDropTouch;\n  })(DragDropTouch || (DragDropTouch = {}));\n}\n","// https://github.com/CamHenlin/TouchPolyfill\n// polyfill touch functionality on browsers that have pointer functionality (that piece of trash internet explorer)\n// this thing is mostly just a hack on handjs, but does the reverse\n// cameron henlin, cam.henlin@gmail.com\n\n// jslint directive\n/*jslint browser: true, unparam: true, nomen: true*/\n/*global HTMLBodyElement, HTMLDivElement, HTMLImageElement, HTMLUListElement, HTMLAnchorElement, HTMLLIElement, HTMLTableElement, HTMLSpanElement, HTMLCanvasElement, SVGElement*/\n\nexport default () => {\n  (function() {\n    // We should start using 'use strict' as soon as we can get rid of the implied globals.\n    // 'use strict';\n\n    // the timestamp of the last touch event processed.\n    // It is used to determine what touches should be in the changedTouches TouchList array.\n    var lastHwTimestamp = 0,\n      // whether or not to log events to console\n      logToConsole = false,\n      userAgent = navigator.userAgent,\n      supportedEventsNames = [\n        'touchstart',\n        'touchmove',\n        'touchend',\n        'touchcancel',\n        'touchleave'\n      ],\n      // commented out because not used\n      // upperCaseEventsNames = [\"TouchStart\", \"TouchMove\", \"TouchEnd\", \"TouchCancel\", \"TouchLeave\"],\n      previousTargets = {},\n      // wraps a W3C compliant implementation of the \"touches\" TouchList\n      touchesWrapper,\n      // wraps a W3C compliant implementation of the \"changedTouches\" TouchList\n      changedTouchesWrapper,\n      // wraps a W3C compliant implementation of the \"targetTouches\" TouchList\n      targetTouchesWrapper;\n\n    // a constructor for an object that wraps a W3C compliant TouchList.\n    function TouchListWrapper() {\n      var touchList = []; // an array of W3C compliant Touch objects.\n\n      // constructor for W3C compliant touch object\n      // http://www.w3.org/TR/touch-events/\n      function Touch(\n        identifier,\n        target,\n        screenX,\n        screenY,\n        clientX,\n        clientY,\n        pageX,\n        pageY\n      ) {\n        this.identifier = identifier;\n        this.target = target;\n        this.screenX = screenX;\n        this.screenY = screenY;\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this.pageX = pageX;\n        this.pageY = pageY;\n      }\n\n      // Search the TouchList for a Touch with the given identifier.\n      // If it is found, return it.  Otherwise, return null;\n      function getTouch(identifier) {\n        var i;\n        for (i = 0; i < touchList.length; i += 1) {\n          if (touchList[i].identifier === identifier) {\n            return touchList[i];\n          }\n        }\n      }\n\n      // If this is a new touch, add it to the TouchList.\n      // If this is an existing touch, update it in the TouchList.\n      function addUpdateTouch(touch) {\n        var i;\n        for (i = 0; i < touchList.length; i += 1) {\n          if (touchList[i].identifier === touch.identifier) {\n            touchList[i] = touch;\n            return;\n          }\n        }\n        // If we finished the loop, then this is a new touch.\n        touchList.push(touch);\n      }\n\n      function removeTouch(identifier) {\n        var i;\n        for (i = 0; i < touchList.length; i += 1) {\n          if (touchList[i].identifier === identifier) {\n            touchList.splice(i, 1);\n          }\n        }\n      }\n\n      function clearTouches() {\n        // According to http://stackoverflow.com/questions/1232040/how-to-empty-an-array-in-javascript\n        // this is the fastest way to clear the array.\n        while (touchList.length > 0) {\n          touchList.pop();\n        }\n      }\n\n      // Return true if the current TouchList object contains a touch at the specified screenX, clientY.\n      // Returns false otherwise.\n      // This is used to differentiate touches that have moved from those that haven't.\n      function containsTouchAt(screenX, screenY) {\n        var i;\n\n        for (i = 0; i < touchList.length; i += 1) {\n          if (\n            touchList[i].screenX === screenX &&\n            touchList[i].screenY === screenY\n          ) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      // touchList is the actual W3C compliant TouchList object being emulated.\n      this.touchList = touchList;\n\n      this.Touch = Touch;\n      this.getTouch = getTouch;\n      this.addUpdateTouch = addUpdateTouch;\n      this.removeTouch = removeTouch;\n      this.clearTouches = clearTouches;\n      this.containsTouchAt = containsTouchAt;\n    }\n\n    function touchesAreAtSameSpot(touch0, touch1) {\n      return (\n        touch0.screenX === touch1.screenX && touch0.screenY === touch1.screenY\n      );\n    }\n\n    // polyfill custom event\n    function CustomEvent(event, params) {\n      var evt;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      return evt;\n    }\n\n    function checkPreventDefault(node) {\n      while (node && !node.handJobjs_forcePreventDefault) {\n        node = node.parentNode;\n      }\n      return !!node || window.handJobjs_forcePreventDefault;\n    }\n\n    // Touch events\n    function generateTouchClonedEvent(\n      sourceEvent,\n      newName,\n      canBubble,\n      target,\n      relatedTarget\n    ) {\n      var evObj, oldTouch, oldTarget;\n\n      // Updates the targetTouches so that it contains the touches from the \"touches\" TouchList\n      // that have the same target as the touch that triggered this event.\n      function updateTargetTouches(thisTouchTarget, touchesTouchList) {\n        var i, touch;\n\n        targetTouchesWrapper.clearTouches();\n\n        for (i = 0; i < touchesTouchList.length; i++) {\n          touch = touchesTouchList[i];\n          if (touch.target.isSameNode(thisTouchTarget)) {\n            targetTouchesWrapper.addUpdateTouch(touch);\n          }\n        }\n      }\n\n      function touchHandler(event) {\n        var eventType, oldTouch, touch, touchEvent, isTouchChanged;\n\n        log('touch!');\n\n        if (event.type === 'pointerdown') {\n          eventType = 'touchstart';\n        } else if (event.type === 'pointermove') {\n          eventType = 'touchmove';\n        } else {\n          throw new Error(\n            'touchHandler received invalid event type: ' +\n              eventType +\n              '. Valid event types are pointerdown and pointermove'\n          );\n        }\n        log(eventType);\n\n        touch = new touchesWrapper.Touch(\n          event.pointerId,\n          event.type === 'pointerdown' ? event.target : oldTarget,\n          event.screenX,\n          event.screenY,\n          event.clientX,\n          event.clientY,\n          event.pageX,\n          event.pageY\n        );\n\n        // Remove, from changedTouches, any Touch that is no longer being touched, or is being touched\n        // in exactly the same place.\n        // In order to make sure that simultaneous touches don't kick each other off of the changedTouches array\n        // (because they are processed as different pointer events), skip this if the lastHwTimestamp hasn't increased.\n        if (event.hwTimestamp > lastHwTimestamp) {\n          (function() {\n            var i, changedTouchList, changedTouch, matchingTouch, identifier;\n            changedTouchList = changedTouchesWrapper.touchList;\n            for (i = 0; i < changedTouchList.length; i += 1) {\n              changedTouch = changedTouchList[i];\n              identifier = changedTouch.identifier;\n              matchingTouch = touchesWrapper.getTouch(identifier);\n\n              if (\n                !matchingTouch ||\n                touchesAreAtSameSpot(matchingTouch, changedTouch)\n              ) {\n                changedTouchesWrapper.removeTouch(identifier);\n              }\n            }\n          })();\n        }\n\n        log('generating touch cloned');\n\n        touchesWrapper.addUpdateTouch(touch);\n        changedTouchesWrapper.addUpdateTouch(touch);\n        updateTargetTouches(touch.target, touchesWrapper.touchList);\n\n        event.type = eventType;\n        touchEvent = new CustomEvent(eventType, {\n          bubbles: true,\n          cancelable: true\n        });\n\n        touchEvent.touches = touchesWrapper.touchList;\n        touchEvent.changedTouches = changedTouchesWrapper.touchList;\n        touchEvent.targetTouches = targetTouchesWrapper.touchList;\n        touchEvent.type = eventType;\n\n        // Awesomely, I figured out how to keep track of the touches in the \"Touches\" TouchList using an array.\n        // TODO: Do the same thing for the changedTouches and targetTouches properties of the TouchEvent.\n        // TODONE! changedTouches is implemented.\n        // TODONE! targetTouches is implemented.\n\n        // The other members of the TouchEvent are altKey, metaKey, ctrlKey, and shiftKey\n\n        return touchEvent;\n      }\n\n      function touchChangedHandler(event) {\n        var eventType, touch, touchEvent;\n\n        log('touchchanged!');\n        event.changedTouches = [];\n        event.changedTouches.length = 1;\n        event.changedTouches[0] = event;\n        event.changedTouches[0].identifier = event.pointerId;\n\n        if (event.type === 'pointerup') {\n          eventType = 'touchend';\n        } else if (event.type === 'pointercancel') {\n          eventType = 'touchcancel';\n        } else if (event.type === 'pointerleave') {\n          eventType = 'touchleave';\n        }\n\n        touch = new touchesWrapper.Touch(\n          event.pointerId,\n          oldTarget,\n          event.screenX,\n          event.screenY,\n          event.clientX,\n          event.clientY,\n          event.pageX,\n          event.pageY\n        );\n\n        // This is a new touch event if it happened at a greater time than the last touch event.\n        // If it is a new touch event, clear out the changedTouches TouchList.\n        if (event.hwTimestamp > lastHwTimestamp) {\n          changedTouchesWrapper.clearTouches();\n        }\n\n        touchesWrapper.removeTouch(touch.identifier);\n        changedTouchesWrapper.addUpdateTouch(touch);\n        updateTargetTouches(touch.target, touchesWrapper.touchList);\n\n        event.type = eventType;\n        touchEvent = new CustomEvent(eventType, {\n          bubbles: true,\n          cancelable: true\n        });\n        touchEvent.touches = touchesWrapper.touchList;\n        touchEvent.changedTouches = changedTouchesWrapper.touchList;\n        touchEvent.targetTouches = targetTouchesWrapper.touchList;\n        touchEvent.type = eventType;\n\n        return touchEvent;\n      }\n\n      // An important difference between the MS pointer events and the W3C touch events\n      // is that for pointer events except for pointerdown, all target the element that the touch\n      // is over when the event is fired.\n      // The W3C touch events target the element where the touch originally started.\n      // Therefore, when these events are fired, we must make this change manually.\n      if (sourceEvent.type !== 'pointerdown') {\n        oldTouch = touchesWrapper.getTouch(sourceEvent.pointerId);\n        oldTarget = oldTouch.target;\n        sourceEvent.target = oldTarget;\n      }\n\n      if (\n        sourceEvent.type === 'pointerdown' ||\n        sourceEvent.type === 'pointermove'\n      ) {\n        evObj = touchHandler(sourceEvent);\n      } else {\n        evObj = touchChangedHandler(sourceEvent);\n      }\n\n      // PreventDefault\n      evObj.preventDefault = function() {\n        if (sourceEvent.preventDefault !== undefined) {\n          sourceEvent.preventDefault();\n        }\n      };\n\n      // Fire event\n      log('dispatching!');\n      sourceEvent.target.dispatchEvent(evObj);\n\n      lastHwTimestamp = event.hwTimestamp;\n    }\n\n    function generateTouchEventProxy(\n      name,\n      touchPoint,\n      target,\n      eventObject,\n      canBubble,\n      relatedTarget\n    ) {\n      generateTouchClonedEvent(\n        touchPoint,\n        name,\n        canBubble,\n        target,\n        relatedTarget\n      );\n    }\n\n    function registerOrUnregisterEvent(item, name, func, enable) {\n      log('registerOrUnregisterEvent');\n      if (item.__handJobjsRegisteredEvents === undefined) {\n        item.__handJobjsRegisteredEvents = [];\n      }\n\n      if (enable) {\n        if (item.__handJobjsRegisteredEvents[name] !== undefined) {\n          item.__handJobjsRegisteredEvents[name] += 1;\n          return;\n        }\n\n        item.__handJobjsRegisteredEvents[name] = 1;\n        log('adding event ' + name);\n        item.addEventListener(name, func, false);\n      } else {\n        if (item.__handJobjsRegisteredEvents.indexOf(name) !== -1) {\n          item.__handJobjsRegisteredEvents[name] -= 1;\n\n          if (item.__handJobjsRegisteredEvents[name] !== 0) {\n            return;\n          }\n        }\n        log('removing event');\n        item.removeEventListener(name, func);\n        item.__handJobjsRegisteredEvents[name] = 0;\n      }\n    }\n\n    function setTouchAware(item, eventName, enable) {\n      var eventGenerator, targetEvent;\n\n      function nameGenerator(name) {\n        return name;\n      } // easier than doing this right and replacing all the references\n\n      log('setTouchAware ' + enable + ' ' + eventName);\n      // Leaving tokens\n      if (!item.__handJobjsGlobalRegisteredEvents) {\n        item.__handJobjsGlobalRegisteredEvents = [];\n      }\n      if (enable) {\n        if (item.__handJobjsGlobalRegisteredEvents[eventName] !== undefined) {\n          item.__handJobjsGlobalRegisteredEvents[eventName] += 1;\n          return;\n        }\n        item.__handJobjsGlobalRegisteredEvents[eventName] = 1;\n\n        log(item.__handJobjsGlobalRegisteredEvents[eventName]);\n      } else {\n        if (item.__handJobjsGlobalRegisteredEvents[eventName] !== undefined) {\n          item.__handJobjsGlobalRegisteredEvents[eventName] -= 1;\n          if (item.__handJobjsGlobalRegisteredEvents[eventName] < 0) {\n            item.__handJobjsGlobalRegisteredEvents[eventName] = 0;\n          }\n        }\n      }\n\n      eventGenerator = generateTouchClonedEvent;\n\n      //switch (eventName) {\n      //    case \"touchenter\":\n      //      log(\"touchenter\");\n      //      break;\n      //    case \"touchleave\":\n      //      log(\"touchleave\");\n      targetEvent = nameGenerator(eventName);\n\n      if (item['on' + targetEvent.toLowerCase()] !== undefined) {\n        registerOrUnregisterEvent(\n          item,\n          targetEvent,\n          function(evt) {\n            eventGenerator(evt, eventName);\n          },\n          enable\n        );\n      }\n      //        break;\n      //}\n    }\n\n    // Intercept addEventListener calls by changing the prototype\n    function interceptAddEventListener(root) {\n      var current = root.prototype\n        ? root.prototype.addEventListener\n        : root.addEventListener;\n\n      function customAddEventListener(name, func, capture) {\n        log('customAddEventListener');\n        log(name);\n\n        if (supportedEventsNames.indexOf(name) !== -1) {\n          log('setting touch aware...');\n          setTouchAware(this, name, true);\n        }\n        current.call(this, name, func, capture);\n      }\n\n      log('intercepting add event listener!');\n      log(root);\n\n      if (root.prototype) {\n        root.prototype.addEventListener = customAddEventListener;\n      } else {\n        root.addEventListener = customAddEventListener;\n      }\n    }\n\n    function handleOtherEvent(eventObject, name) {\n      log('handle other event');\n      if (eventObject.preventManipulation) {\n        eventObject.preventManipulation();\n      }\n\n      // TODO: JSLint found that touchPoint here is an implied global!\n      generateTouchClonedEvent(touchPoint, name);\n    }\n\n    function removeTouchAware(item, eventName) {\n      // If item is already touch aware, do nothing\n      if (item.ontouchdown !== undefined) {\n        return;\n      }\n\n      // Chrome, Firefox\n      if (item.ontouchstart !== undefined) {\n        switch (eventName.toLowerCase()) {\n          case 'touchstart':\n            item.removeEventListener('pointerdown', function(evt) {\n              handleOtherEvent(evt, eventName);\n            });\n            break;\n          case 'touchmove':\n            item.removeEventListener('pointermove', function(evt) {\n              handleOtherEvent(evt, eventName);\n            });\n            break;\n          case 'touchend':\n            item.removeEventListener('pointerup', function(evt) {\n              handleOtherEvent(evt, eventName);\n            });\n            break;\n          case 'touchcancel':\n            item.removeEventListener('pointercancel', function(evt) {\n              handleOtherEvent(evt, eventName);\n            });\n            break;\n        }\n      }\n    }\n\n    // Intercept removeEventListener calls by changing the prototype\n    function interceptRemoveEventListener(root) {\n      var current = root.prototype\n        ? root.prototype.removeEventListener\n        : root.removeEventListener;\n\n      function customRemoveEventListener(name, func, capture) {\n        // Branch when a PointerXXX is used\n        if (supportedEventsNames.indexOf(name) !== -1) {\n          removeTouchAware(this, name);\n        }\n\n        current.call(this, name, func, capture);\n      }\n\n      if (root.prototype) {\n        root.prototype.removeEventListener = customRemoveEventListener;\n      } else {\n        root.removeEventListener = customRemoveEventListener;\n      }\n    }\n\n    function checkEventRegistration(node, eventName) {\n      log('checkEventRegistration');\n      return (\n        node.__handJobjsGlobalRegisteredEvents &&\n        node.__handJobjsGlobalRegisteredEvents[eventName]\n      );\n    }\n\n    function findEventRegisteredNode(node, eventName) {\n      log('findEventRegisteredNode');\n      while (node && !checkEventRegistration(node, eventName)) {\n        node = node.parentNode;\n      }\n      if (node) {\n        return node;\n      }\n      if (checkEventRegistration(window, eventName)) {\n        return window;\n      }\n    }\n\n    function generateTouchEventProxyIfRegistered(\n      eventName,\n      touchPoint,\n      target,\n      eventObject,\n      canBubble,\n      relatedTarget\n    ) {\n      // Check if user registered this event\n      log('generateTouchEventProxyIfRegistered');\n      if (findEventRegisteredNode(target, eventName)) {\n        generateTouchEventProxy(\n          eventName,\n          touchPoint,\n          target,\n          eventObject,\n          canBubble,\n          relatedTarget\n        );\n      }\n    }\n\n    function getDomUpperHierarchy(node) {\n      var nodes = [];\n      if (node) {\n        nodes.unshift(node);\n        while (node.parentNode) {\n          nodes.unshift(node.parentNode);\n          node = node.parentNode;\n        }\n      }\n      return nodes;\n    }\n\n    function getFirstCommonNode(node1, node2) {\n      var parents1 = getDomUpperHierarchy(node1),\n        parents2 = getDomUpperHierarchy(node2),\n        lastmatch = null;\n\n      while (parents1.length > 0 && parents1[0] === parents2.shift()) {\n        lastmatch = parents1.shift();\n      }\n      return lastmatch;\n    }\n\n    // generateProxy receives a node to dispatch the event\n    function dispatchPointerEnter(currentTarget, relatedTarget, generateProxy) {\n      log('dispatchPointerEnter');\n      var commonParent = getFirstCommonNode(currentTarget, relatedTarget),\n        node = currentTarget,\n        nodelist = [];\n\n      while (node && node !== commonParent) {\n        // target range: this to the direct child of parent relatedTarget\n        if (checkEventRegistration(node, 'touchenter')) {\n          // check if any parent node has pointerenter\n          nodelist.push(node);\n        }\n        node = node.parentNode;\n      }\n      while (nodelist.length > 0) {\n        generateProxy(nodelist.pop());\n      }\n    }\n\n    // generateProxy receives a node to dispatch the event\n    function dispatchPointerLeave(currentTarget, relatedTarget, generateProxy) {\n      log('dispatchPointerLeave');\n      var commonParent = getFirstCommonNode(currentTarget, relatedTarget),\n        node = currentTarget;\n      while (node && node !== commonParent) {\n        //target range: this to the direct child of parent relatedTarget\n        if (checkEventRegistration(node, 'touchleave')) {\n          // check if any parent node has pointerleave\n          generateProxy(node);\n        }\n        node = node.parentNode;\n      }\n    }\n\n    function log(s) {\n      if (logToConsole) {\n        console.log(s.toString());\n      }\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    if (typeof window.ontouchstart === 'object') {\n      return;\n    }\n\n    if (\n      userAgent.match(/iPad/i) ||\n      userAgent.match(/iPhone/i) ||\n      userAgent.match(/iPod/i) ||\n      userAgent.match(/Android/i) ||\n      (userAgent.match(/MSIE/i) && !userAgent.match(/Touch/i))\n    ) {\n      return;\n    }\n\n    // Add CSS to disable MS IE default scrolling functionality.\n    (function() {\n      var css = 'html { -ms-touch-action: none; }',\n        head = document.head || document.getElementsByTagName('head')[0],\n        style = document.createElement('style');\n\n      style.type = 'text/css';\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(document.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    })();\n\n    touchesWrapper = new TouchListWrapper();\n    changedTouchesWrapper = new TouchListWrapper();\n    targetTouchesWrapper = new TouchListWrapper();\n\n    window.CustomEvent = CustomEvent;\n\n    // Hooks\n    interceptAddEventListener(window);\n    interceptAddEventListener(window.HTMLElement || window.Element);\n    interceptAddEventListener(document);\n    interceptAddEventListener(HTMLBodyElement);\n    interceptAddEventListener(HTMLDivElement);\n    interceptAddEventListener(HTMLImageElement);\n    interceptAddEventListener(HTMLUListElement);\n    interceptAddEventListener(HTMLAnchorElement);\n    interceptAddEventListener(HTMLLIElement);\n    interceptAddEventListener(HTMLTableElement);\n    if (window.HTMLSpanElement) {\n      interceptAddEventListener(HTMLSpanElement);\n    }\n    if (window.HTMLCanvasElement) {\n      interceptAddEventListener(HTMLCanvasElement);\n    }\n    if (window.SVGElement) {\n      interceptAddEventListener(SVGElement);\n    }\n\n    interceptRemoveEventListener(window);\n    interceptRemoveEventListener(window.HTMLElement || window.Element);\n    interceptRemoveEventListener(document);\n    interceptRemoveEventListener(HTMLBodyElement);\n    interceptRemoveEventListener(HTMLDivElement);\n    interceptRemoveEventListener(HTMLImageElement);\n    interceptRemoveEventListener(HTMLUListElement);\n    interceptRemoveEventListener(HTMLAnchorElement);\n    interceptRemoveEventListener(HTMLLIElement);\n    interceptRemoveEventListener(HTMLTableElement);\n    if (window.HTMLSpanElement) {\n      interceptRemoveEventListener(HTMLSpanElement);\n    }\n    if (window.HTMLCanvasElement) {\n      interceptRemoveEventListener(HTMLCanvasElement);\n    }\n    if (window.SVGElement) {\n      interceptRemoveEventListener(SVGElement);\n    }\n\n    (function() {\n      // Returns true if and only if the event should be ignored.\n      function ignorePointerEvent(event) {\n        // Don't interpret mouse pointers as touches\n        if (event.pointerType === 'mouse') {\n          return true;\n        }\n        // Don't interpret pointerdown events on the scrollbars as touch events.\n        // It appears to be the case that when the event is on the scrollbar in IE,\n        // event.x === 0 and event.y === 0\n        if (event.type === 'pointerdown' && event.x === 0 && event.y === 0) {\n          return true;\n        }\n        // A user reported that when the input type is 'pen', the pointermove event fires with a pressure of 0\n        // before the pen touches the screen.  We want to ignore this.\n        if (\n          event.pointerType === 'pen' &&\n          event.pressure === 0 &&\n          event.type === 'pointermove'\n        ) {\n          return true;\n        }\n        return false;\n      }\n\n      // Handling move on window to detect pointerleave/out/over\n      window.addEventListener('pointerdown', function(eventObject) {\n        log('pointerdownfired');\n        var touchPoint = eventObject;\n\n        if (ignorePointerEvent(eventObject)) {\n          return;\n        }\n\n        previousTargets[touchPoint.identifier] = touchPoint.target;\n        generateTouchEventProxyIfRegistered(\n          'touchenter',\n          touchPoint,\n          touchPoint.target,\n          eventObject,\n          true\n        );\n\n        // pointerenter should not be bubbled\n        dispatchPointerEnter(touchPoint.target, null, function(targetNode) {\n          generateTouchEventProxy(\n            'touchenter',\n            touchPoint,\n            targetNode,\n            eventObject,\n            false\n          );\n        });\n\n        generateTouchEventProxyIfRegistered(\n          'touchstart',\n          touchPoint,\n          touchPoint.target,\n          eventObject,\n          true\n        );\n      });\n\n      window.addEventListener('pointerup', function(eventObject) {\n        var touchPoint = eventObject,\n          currentTarget = previousTargets[touchPoint.identifier];\n\n        log('pointer up fired');\n\n        if (ignorePointerEvent(eventObject)) {\n          return;\n        }\n\n        generateTouchEventProxyIfRegistered(\n          'touchend',\n          touchPoint,\n          currentTarget,\n          eventObject,\n          true\n        );\n        generateTouchEventProxyIfRegistered(\n          'touchleave',\n          touchPoint,\n          currentTarget,\n          eventObject,\n          true\n        );\n\n        //pointerleave should not be bubbled\n        dispatchPointerLeave(currentTarget, null, function(targetNode) {\n          generateTouchEventProxy(\n            'touchleave',\n            touchPoint,\n            targetNode,\n            eventObject,\n            false\n          );\n        });\n      });\n\n      window.addEventListener('pointermove', function(eventObject) {\n        var touchPoint = eventObject,\n          currentTarget = previousTargets[touchPoint.identifier];\n\n        log('pointer move fired');\n\n        if (ignorePointerEvent(eventObject)) {\n          return;\n        }\n\n        log('x: ' + eventObject.screenX + ', y: ' + eventObject.screenY);\n\n        // pointermove fires over and over when a touch-point stays stationary.\n        // This is at odds with the other browsers that implement the W3C standard touch events\n        // which fire touchmove only when the touch-point actually moves.\n        // Therefore, return without doing anything if the pointermove event fired for a touch\n        // that hasn't moved.\n        if (\n          touchesWrapper.containsTouchAt(eventObject.screenX, eventObject.screenY)\n        ) {\n          return;\n        }\n\n        // If force preventDefault\n        if (currentTarget && checkPreventDefault(currentTarget) === true) {\n          eventObject.preventDefault();\n        }\n\n        generateTouchEventProxyIfRegistered(\n          'touchmove',\n          touchPoint,\n          currentTarget,\n          eventObject,\n          true\n        );\n      });\n    })();\n  })();\n}\n"],"sourceRoot":""}