<?php
/**
 * XAVRequestAddressKeyFormatTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\AddressValidation
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Address Validation - Street Level
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace UPS\AddressValidation;

use PHPUnit\Framework\TestCase;

/**
 * XAVRequestAddressKeyFormatTest Class Doc Comment
 *
 * @category    Class
 * @description AddressKeyFormat container. The Key format is based on addressing standards jointly developed by the Postal Service and mailing industry.  The information provided in the Address Key container will be returned in the same format.
 * @package     UPS\AddressValidation
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class XAVRequestAddressKeyFormatTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "XAVRequestAddressKeyFormat"
     */
    public function testXAVRequestAddressKeyFormat()
    {
    }

    /**
     * Test attribute "consignee_name"
     */
    public function testPropertyConsigneeName()
    {
    }

    /**
     * Test attribute "attention_name"
     */
    public function testPropertyAttentionName()
    {
    }

    /**
     * Test attribute "address_line"
     */
    public function testPropertyAddressLine()
    {
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
    }

    /**
     * Test attribute "political_division2"
     */
    public function testPropertyPoliticalDivision2()
    {
    }

    /**
     * Test attribute "political_division1"
     */
    public function testPropertyPoliticalDivision1()
    {
    }

    /**
     * Test attribute "postcode_primary_low"
     */
    public function testPropertyPostcodePrimaryLow()
    {
    }

    /**
     * Test attribute "postcode_extended_low"
     */
    public function testPropertyPostcodeExtendedLow()
    {
    }

    /**
     * Test attribute "urbanization"
     */
    public function testPropertyUrbanization()
    {
    }

    /**
     * Test attribute "country_code"
     */
    public function testPropertyCountryCode()
    {
    }
}
